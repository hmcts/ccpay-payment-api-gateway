{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "apiManagementServiceName": {
      "type": "string",
      "metadata": {
        "description": "API Management service name"
      }
    },
    "apiName": {
      "type": "string",
      "metadata": {
        "description": "Name of the API (gateway)"
      }
    },
    "apiProductName": {
      "type": "string",
      "metadata": {
        "description": "API Management product name"
      }
    },
    "serviceUrl": {
      "type": "string",
      "metadata": {
        "description": "URL of the backend service (to be protected by the API)"
      }
    },
    "apiBasePath": {
      "type": "string",
      "metadata": {
        "description": "Path to the API (excluding host)"
      }
    },
    "policy": {
      "type": "string"
    }
  },
  "variables": {
    "fullApiProductName": "[concat('Microsoft.ApiManagement/service/', parameters('apiManagementServiceName'), '/products/', parameters('apiProductName'))]",
    "fullApiName": "[concat('Microsoft.ApiManagement/service/', parameters('apiManagementServiceName'), '/apis/', parameters('apiName'))]"
  },
  "resources": [
    {
      "apiVersion": "2017-03-01",
      "type": "Microsoft.ApiManagement/service/products",
      "name": "[concat(parameters('apiManagementServiceName') ,'/', parameters('apiProductName'))]",
      "dependsOn": [
      ],
      "properties": {
        "displayName": "[parameters('apiProductName')]",
        "subscriptionRequired": false,
        "state": "published"
      }
    },
    {
      "apiVersion": "2017-03-01",
      "type": "Microsoft.ApiManagement/service/apis",
      "name": "[concat(parameters('apiManagementServiceName'), '/', parameters('apiName'))]",
      "dependsOn": [
        "[variables('fullApiProductName')]"
      ],
      "properties": {
        "displayName": "Payments API",
        "serviceUrl": "[parameters('serviceUrl')]",
        "path": "[parameters('apiBasePath')]",
        "protocols": [
          "HTTPS"
        ]
      },
      "resources": [
        {
          "apiVersion": "2017-03-01",
          "type": "operations",
          "name": "getPayments",
          "dependsOn": [
            "[variables('fullApiName')]"
          ],
          "properties": {
            "displayName": "Get list of payments",
            "description": "Returns all payments that match filter criteria",
            "method": "GET",
            "urlTemplate": "/payments",
            "request": {
              "description": "Gets payments filtered by query params",
              "queryParameters": [
                {
                  "name": "start_date",
                  "description": "Format - date time (as full-date in RFC3339). The start date time to filter on. If the time is not supplied then it will be defaulted to 00:00:00",
                  "type": "string"
                },
                {
                  "name": "end_date",
                  "description": "Format - date time (as full-date in RFC3339). The end date to filter on. If the time is not supplied then it will be defaulted to 00:00:00",
                  "type": "string"
                },
                {
                  "name": "payment_method",
                  "description": "the method used for payment. Available values : CARD, PBA, CASH, CHEQUE, POSTAL_ORDER",
                  "type": "string"
                }
              ]
            },
            "responses": [
              {
                "statusCode": 200,
                "description": "successful operation",
                "representations": [
                  {
                    "contentType":"application/json",
                    "sample":"{\r\n  \"payments\": [\r\n    {\r\n      \"_links\": {\r\n        \"cancel\": {\r\n          \"href\": \"string\",\r\n          \"method\": \"string\"\r\n        },\r\n        \"next_url\": {\r\n          \"href\": \"string\",\r\n          \"method\": \"string\"\r\n        },\r\n        \"self\": {\r\n          \"href\": \"string\",\r\n          \"method\": \"string\"\r\n        }\r\n      },\r\n      \"account_number\": \"string\",\r\n      \"amount\": 0,\r\n      \"case_reference\": \"string\",\r\n      \"ccd_case_number\": \"string\",\r\n      \"channel\": \"string\",\r\n      \"currency\": \"GBP\",\r\n      \"customer_reference\": \"string\",\r\n      \"date_created\": \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\",\r\n      \"date_updated\": \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\",\r\n      \"description\": \"string\",\r\n      \"external_provider\": \"string\",\r\n      \"external_reference\": \"string\",\r\n      \"fees\": [\r\n        {\r\n          \"calculated_amount\": 0,\r\n          \"ccd_case_number\": \"string\",\r\n          \"code\": \"string\",\r\n          \"memo_line\": \"string\",\r\n          \"natural_account_code\": \"string\",\r\n          \"reference\": \"string\",\r\n          \"version\": \"string\",\r\n          \"volume\": 0\r\n        }\r\n      ],\r\n      \"giro_slip_no\": \"string\",\r\n      \"id\": \"string\",\r\n      \"method\": \"string\",\r\n      \"organisation_name\": \"string\",\r\n      \"payment_group_reference\": \"string\",\r\n      \"payment_reference\": \"string\",\r\n      \"reference\": \"string\",\r\n      \"reported_date_offline\": \"string\",\r\n      \"service_name\": \"string\",\r\n      \"site_id\": \"string\",\r\n      \"status\": \"string\",\r\n      \"status_histories\": [\r\n        {\r\n          \"date_created\": \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\",\r\n          \"date_updated\": \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\",\r\n          \"external_status\": \"string\",\r\n          \"status\": \"string\"\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}"
                  }
                ]
              },
              {
                "statusCode": 403,
                "description": "Invalid client certificate"
              },
              {
                "statusCode": 400,
                "description": "Bad request"
              }
            ]
          }
        }

      ]
    },
    {
      "apiVersion": "2017-03-01",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "name": "[concat(parameters('apiManagementServiceName'), '/', parameters('apiProductName'), '/', parameters('apiName'))]",
      "dependsOn": [
        "[variables('fullApiProductName')]",
        "[variables('fullApiName')]"
      ]
    },
    {
      "apiVersion": "2017-03-01",
      "type": "Microsoft.ApiManagement/service/apis/policies",
      "name": "[concat(parameters('apiManagementServiceName'), '/', parameters('apiName'),'/policy')]",
      "dependsOn": [
        "[variables('fullApiProductName')]",
        "[variables('fullApiName')]"
      ],
      "properties": {
        "policyContent": "[parameters('policy')]"
      }
    }
  ]
}
