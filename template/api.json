{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "apiManagementServiceName": {
      "type": "string",
      "metadata": {
        "description": "API Management service name"
      }
    },
    "apiName": {
      "type": "string",
      "metadata": {
        "description": "Name of the API (gateway)"
      }
    },
    "apiProductName": {
      "type": "string",
      "metadata": {
        "description": "API Management product name"
      }
    },
    "serviceUrl": {
      "type": "string",
      "metadata": {
        "description": "URL of the backend service (to be protected by the API)"
      }
    },
    "apiBasePath": {
      "type": "string",
      "metadata": {
        "description": "Path to the API (excluding host)"
      }
    },
    "policy": {
      "type": "string"
    }
  },
  "variables": {
    "fullApiProductName": "[concat('Microsoft.ApiManagement/service/', parameters('apiManagementServiceName'), '/products/', parameters('apiProductName'))]",
    "fullApiName": "[concat('Microsoft.ApiManagement/service/', parameters('apiManagementServiceName'), '/apis/', parameters('apiName'))]",
    "developersGroupName": "Developers"
  },
  "resources": [
    {
      "apiVersion": "2017-03-01",
      "type": "Microsoft.ApiManagement/service/products",
      "name": "[concat(parameters('apiManagementServiceName') ,'/', parameters('apiProductName'))]",
      "dependsOn": [
      ],
      "properties": {
        "displayName": "[parameters('apiProductName')]",
        "subscriptionRequired": true,
        "state": "published"
      }
    },
    {
      "apiVersion": "2017-03-01",
      "type": "Microsoft.ApiManagement/service/products/groups",
      "name": "[concat(parameters('apiManagementServiceName') ,'/', parameters('apiProductName'), '/', variables('developersGroupName'))]",
      "properties": {
        "displayName": "Developers",
        "description": "Developers group",
        "builtIn": true,
        "type": "system"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/products', parameters('apiManagementServiceName'), parameters('apiProductName'))]"
      ]
    },
    {
      "apiVersion": "2017-03-01",
      "type": "Microsoft.ApiManagement/service/apis",
      "name": "[concat(parameters('apiManagementServiceName'), '/', parameters('apiName'))]",
      "dependsOn": [
        "[variables('fullApiProductName')]"
      ],
      "properties": {
        "displayName": "Payments API",
        "serviceUrl": "[parameters('serviceUrl')]",
        "path": "[parameters('apiBasePath')]",
        "protocols": [
          "HTTPS"
        ]
      },
      "resources": [
        {
          "apiVersion": "2017-03-01",
          "type": "operations",
          "name": "getPayments",
          "dependsOn": [
            "[variables('fullApiName')]"
          ],
          "properties": {
            "displayName": "Get list of payments",
            "description": "Returns all payments that match filter criteria",
            "method": "GET",
            "urlTemplate": "/payments",
            "request": {
              "description": "Gets payments filtered by query params",
              "queryParameters": [
                {
                  "name": "start_date",
                  "description": "Format - date time (as full-date in RFC3339). The start date time to filter on. If the time is not supplied then it will be defaulted to 00:00:00",
                  "type": "string"
                },
                {
                  "name": "end_date",
                  "description": "Format - date time (as full-date in RFC3339). The end date to filter on. If the time is not supplied then it will be defaulted to 00:00:00",
                  "type": "string"
                },
                {
                  "name": "payment_method",
                  "description": "the method used for payment. Available values : CARD, PBA, CASH, CHEQUE, POSTAL_ORDER",
                  "type": "string"
                }
              ]
            },
            "responses": [
              {
                "statusCode": 200,
                "description": "successful operation",
                "representations": [
                  {
                    "contentType":"application/json",
                    "sample":"{\r\n  \"payments\": [\r\n    {\r\n      \"_links\": {\r\n        \"cancel\": {\r\n          \"href\": \"string\",\r\n          \"method\": \"string\"\r\n        },\r\n        \"next_url\": {\r\n          \"href\": \"string\",\r\n          \"method\": \"string\"\r\n        },\r\n        \"self\": {\r\n          \"href\": \"string\",\r\n          \"method\": \"string\"\r\n        }\r\n      },\r\n      \"account_number\": \"string\",\r\n      \"amount\": 0, // Payment amount in GBP\r\n      \"case_reference\": \"string\",\r\n      \"ccd_case_number\": \"string\", // string ccd case number for the fees\r\n      \"channel\": \"string\", // The channel used for payment Enum: [ \"digital bar\", \"online\", \"solicitors portal\", \"telephony\" ]\r\n      \"currency\": \"GBP\",\r\n      \"customer_reference\": \"string\",\r\n      \"date_created\": \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\",\r\n      \"date_updated\": \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\",\r\n      \"description\": \"string\",\r\n      \"external_provider\": \"string\", // External provider for e.g. 'gov pay' in case of online card payments, 'barclaycard' in case of card payments in court. Possible values: 'gov pay', 'middle office provider' (for Payment By Account), 'barclaycard'. This will be empty for cheques, postal order and cash.\r\n      \"external_reference\": \"string\", // The reference number given by the external provider. In case of cheque or postal order the value in this field will be the cheque number or the postal order number. In case of card payments made in court, the value in this field will be the authorisation code. For cash it will be blank.\r\n      \"fees\": [\r\n        {\r\n          \"calculated_amount\": 0, // Calculated amount for the fee. Usually this will be the fee amount. In case where the fees were charged for the number of copies, the calculated amount is the amount of fees for the total number of copies.\r\n          \"ccd_case_number\": \"string\", // ccd case number for the fees\r\n          \"code\": \"string\", // Fee identifier\r\n          \"memo_line\": \"string\", // example: GOV - Paper fees - Money claim Â£1,000-1,500\r\n          \"natural_account_code\": \"string\", // example: 4481102158\r\n          \"reference\": \"string\", // any reference associated to the fee payment; for e.g. could be case number in from legacy case management systems for e.g. caseman, family man etc.\r\n          \"version\": \"string\", // Version of the fee applicable for a given time period\r\n          \"volume\": 0 // Fee volume e.g. in the case where fees were charged for the number of copies. In case where the nature of the fees was such that volume is not application i.e. application fee, then this will be defaulted to 1\r\n        }\r\n      ],\r\n      \"giro_slip_no\": \"string\", // Number of the paper slip attached to bank instruction\r\n      \"id\": \"string\",\r\n      \"method\": \"string\", // the method used for payment\r\n      \"organisation_name\": \"string\",\r\n      \"payment_group_reference\": \"string\", // Group associated to multiple payments\r\n      \"payment_reference\": \"string\", // Unique identifier for the payment\r\n      \"reference\": \"string\",\r\n      \"reported_date_offline\": \"string\", // Date of payment reported by the court\r\n      \"service_name\": \"string\", // The reform service through which the payment was made\r\n      \"site_id\": \"string\", // Standardised court identification number, using the pre-existing site IDs\r\n      \"status\": \"string\", // The status of the payment. For cheque and postal orders submitted via the DigitalBAR channel, the status will be Pending. Enum: [ Pending, Payment initiated, Success, Failed, Timed out, Declined, Cancelled, Error ]\r\n      \"status_histories\": [\r\n        {\r\n          \"date_created\": \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\",\r\n          \"date_updated\": \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\",\r\n          \"external_status\": \"string\",\r\n          \"status\": \"string\"\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n"
                  }
                ]
              },
              {
                "statusCode": 403,
                "description": "Probably invalid client certificate"
              },
              {
                "statusCode": 400,
                "description": "Bad request"
              }
            ]
          }
        },
        {
          "apiVersion": "2017-03-01",
          "type": "operations",
          "name": "paymentByReference",
          "dependsOn": [
            "[variables('fullApiName')]"
          ],
          "properties": {
            "displayName": "Gets payment by reference",
            "description": "Gets payment by reference",
            "method": "GET",
            "urlTemplate": "/payments/{payment_reference}",
            "templateParameters": [
              {
                "name": "payment_reference",
                "description": "Payment reference",
                "type": "string"
              }
            ],
            "responses": [
              {
                "statusCode": 200,
                "description": "successful operation",
                "representations": [
                  {
                    "contentType":"application/json"
                  }
                ]
              },
              {
                "statusCode": 403,
                "description": "Invalid client certificate or unauthorised token"
              },
              {
                "statusCode": 404,
                "description": "Payment not found"
              }
            ]
          }
        }

      ]
    },
    {
      "apiVersion": "2017-03-01",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "name": "[concat(parameters('apiManagementServiceName'), '/', parameters('apiProductName'), '/', parameters('apiName'))]",
      "dependsOn": [
        "[variables('fullApiProductName')]",
        "[variables('fullApiName')]"
      ]
    },
    {
      "apiVersion": "2017-03-01",
      "type": "Microsoft.ApiManagement/service/apis/policies",
      "name": "[concat(parameters('apiManagementServiceName'), '/', parameters('apiName'),'/policy')]",
      "dependsOn": [
        "[variables('fullApiProductName')]",
        "[variables('fullApiName')]"
      ],
      "properties": {
        "policyContent": "[parameters('policy')]"
      }
    }
  ]
}
